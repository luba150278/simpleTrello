{"version":3,"sources":["store/types/boards.ts","common/constans/api.ts","store/actions/boards.ts","store/types/lists.ts","store/actions/lists.ts","store/types/addBoard.ts","store/actions/boardPost.ts","store/types/editBoard.ts","store/actions/editBoard.ts","store/types/deleteBoard.ts","store/actions/boardDelete.ts","store/types/addList.ts","store/actions/listAdd.ts","store/types/deleteList.ts","store/actions/listDelete.ts","store/types/addCard.ts","store/actions/cardAdd.ts","store/types/editList.ts","store/actions/editList.ts","store/types/deleteCard.ts","store/actions/cardDelete.ts","store/types/editCard.ts","store/actions/editCard.ts","store/actions/index.ts","hooks/useActions.ts","hooks/useTypeSelector.ts","common/constans/messages.ts","components/Alert.tsx","functions/validTitles.ts","pages/Modal/boardCreate/BoardCreate.tsx","pages/Modal/Modal.tsx","pages/Modal/ModalPopup.styles.ts","pages/Modal/BaseModalWrapper.tsx","pages/Board/components/DeleteBoard/DeleteBoard.tsx","pages/Board/components/BoardHeader/BoardHeader.tsx","pages/Board/components/Lists/components/Card/DeleteCard/DeleteCard.tsx","pages/Board/components/Lists/components/Card/Card.tsx","pages/Board/components/AddList/AddList.tsx","pages/Board/components/Lists/components/ListsMain/ListMain.tsx","pages/Board/components/DeleteList/DeleteList.tsx","pages/Board/components/AddCard/AddCard.tsx","pages/Board/components/Lists/components/AddCardInput/AddCardInput.tsx","pages/Board/components/Lists/components/ListTitle/ListTitle.tsx","pages/Board/components/Lists/components/ListInner/ListInner.tsx","pages/Board/components/Lists/Lists.tsx","pages/Board/Board.tsx","functions/cardColorGenerator.ts","store/reducers/boardsReducer.ts","store/reducers/listsReducer.ts","store/reducers/boardReducer.ts","store/reducers/boardEditReducer.ts","store/reducers/deleteBoardReducer.ts","store/reducers/listAddReducer.ts","store/reducers/deleteListReducer.ts","store/reducers/cardAddReducer.ts","store/reducers/listEditReducer.ts","store/reducers/deleteCardReducer.ts","store/reducers/cardEditReducer.ts","store/reducers/index.ts","store/index.ts","pages/Home/components/boards/Boards.tsx","pages/Home/Home.tsx","App.tsx","index.tsx"],"names":["BoardsActionTypes","process","ListsActionTypes","url","api","fetchBoards","dispatch","a","type","FETCH_BOARDS","axios","get","headers","Authorization","response","FETCH_BOARDS_SUCCESS","payload","data","FETCH_BOARDS_ERROR","AddBoardActionTypes","fetchLists","id","FETCH_LISTS","FETCH_LISTS_SUCCESS","FETCH_LISTS_ERROR","EditBoardActionTypes","addBoard","newBoard","post","ADD_BOARD_SUCCESS","e","ADD_BOARD_ERROR","DeleteBoardActionTypes","editBoard","urlEdit","put","EDIT_BOARD_SUCCESS","EDIT_BOARD_ERROR","AddListActionTypes","deleteBoard","delete","DELETE_BOARD_SUCCESS","DELETE_BOARD_ERROR","DeleteListActionTypes","addList","newList","ADD_LIST_SUCCESS","ADD_LIST_ERROR","AddCardActionTypes","deleteList","DELETE_LIST_SUCCESS","DELETE_LIST_ERROR","EditListActionTypes","addCard","newCard","ADD_CARD_SUCCESS","ADD_CARD_ERROR","DeleteCardActionTypes","editList","newData","EDIT_LIST_SUCCESS","EDIT_LIST_ERROR","EditCardActionTypes","deleteCard","DELETE_CARD_SUCCESS","DELETE_CARD_ERROR","editCard","EDIT_CARD_SUCCESS","EDIT_CARD_ERROR","BoardsActionCreators","ListsActionCreators","BoardActionCreators","BoardEditActionCreators","BoardDeleteActionCreators","ListAddActionCreators","ListDeleteActionCreators","CardAddActionCreators","ListEditActionCreators","CardDeleteActionCreators","CardEditActionCreators","useActions","useDispatch","bindActionCreators","ActionCreators","useTypeSelector","useSelector","DANGER_NAME","SUCCESS_LIST_NAME","Alert","show","text","danger","className","role","isValidTitle","title","trim","replaceAll","length","BoardCreate","startTitle","isCreate","useState","setTitle","isAlert","setAlert","isDanger","setDanger","textAlert","setTextAlert","setUpAlert","alrt","dang","setTimeout","onChange","event","target","value","placeholder","onClick","Overlay","styled","div","Modal","onBackDropClick","children","ReactDOM","createPortal","stopPropagation","document","getElementById","ModalContainer","DesktopModalContainer","Header","h3","Close","BaseModalWrapper","isModalVisible","DeleteBoard","history","useHistory","push","BoardHeader","inputEl","useRef","editTile","to","ref","onKeyPress","key","onBlur","DeleteCard","boardID","Provider","Card","card","listID","list_id","description","AddList","countLists","position","ListMain","arrLenght","lists","DeleteList","AddCard","AddCardInput","list","isCardAddVisible","setCardAddVisible","wasVisible","ListTitle","newPos","ListInner","cards","Lists","getLists","arr","Object","keys","map","Number","idCard","Board","match","params","setModalVisible","state","error","loading","useEffect","abortController","AbortController","abort","wasModalVisible","colorGenerator","min","max","colors","Array","i","Math","floor","random","getRandomFloat","initialState","getBoards","boards","users","added","edited","deleted","rootReducer","combineReducers","action","boardAdd","boardEdit","boardDelete","listAdd","listDelete","cardDelete","cardEdit","store","createStore","composeWithDevTools","applyMiddleware","thunk","Boards","Spinner","color","console","log","getState","board","style","background","Main","toggleModal","App","component","Home","path","exact","render"],"mappings":"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","file":"static/js/main.7c34a2de.chunk.js","sourcesContent":["import { IBoards } from '../../interfaces/inrefaces';\r\n\r\nexport interface BoardsState {\r\n  getBoards: IBoards;\r\n  loading: boolean;\r\n  error: null | string;\r\n}\r\nexport enum BoardsActionTypes {\r\n  FETCH_BOARDS = 'FETCH_BOARDS',\r\n  FETCH_BOARDS_SUCCESS = 'FETCH_BOARDS_SUCCESS',\r\n  FETCH_BOARDS_ERROR = 'FETCH_BOARDS_ERROR',\r\n}\r\n\r\ninterface FetchBoardsAction {\r\n  type: BoardsActionTypes.FETCH_BOARDS;\r\n}\r\ninterface FetchBoardsSuccessAction {\r\n  type: BoardsActionTypes.FETCH_BOARDS_SUCCESS;\r\n  payload: IBoards;\r\n}\r\ninterface FetchBoardsErrorAction {\r\n  type: BoardsActionTypes.FETCH_BOARDS_ERROR;\r\n  payload: string;\r\n}\r\nexport type BoardsAction = FetchBoardsAction | FetchBoardsSuccessAction | FetchBoardsErrorAction;\r\n","export default {\r\n  baseURL: process.env.REACT_APP_API_URL || '',\r\n};\r\n","import axios from 'axios';\r\nimport { Dispatch } from 'redux';\r\nimport api from '../../common/constans/api';\r\nimport { BoardsAction, BoardsActionTypes } from '../types/boards';\r\n\r\nconst url = `${api.baseURL}/board`;\r\nexport const fetchBoards = () => async (dispatch: Dispatch<BoardsAction>): Promise<void> => {\r\n  try {\r\n    dispatch({ type: BoardsActionTypes.FETCH_BOARDS });\r\n\r\n    const response = await axios.get(url, {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: 'Bearer 123',\r\n      },\r\n    });\r\n    dispatch({ type: BoardsActionTypes.FETCH_BOARDS_SUCCESS, payload: response.data });\r\n  } catch (e) {\r\n    dispatch({ type: BoardsActionTypes.FETCH_BOARDS_ERROR, payload: \"Error. Boards info don't load\" });\r\n  }\r\n};\r\n","import { ILists } from '../../interfaces/inrefaces';\r\n\r\nexport interface ListsState {\r\n  getLists: ILists;\r\n  loading: boolean;\r\n  error: null | string;\r\n}\r\nexport enum ListsActionTypes {\r\n  FETCH_LISTS = 'FETCH_LISTS',\r\n  FETCH_LISTS_SUCCESS = 'FETCH_LISTS_SUCCESS',\r\n  FETCH_LISTS_ERROR = 'FETCH_LISTS_ERROR',\r\n}\r\n\r\ninterface FetchListsAction {\r\n  type: ListsActionTypes.FETCH_LISTS;\r\n}\r\ninterface FetchListsSuccessAction {\r\n  type: ListsActionTypes.FETCH_LISTS_SUCCESS;\r\n  payload: ILists;\r\n}\r\ninterface FetchListsErrorAction {\r\n  type: ListsActionTypes.FETCH_LISTS_ERROR;\r\n  payload: string;\r\n}\r\nexport type ListsAction = FetchListsAction | FetchListsSuccessAction | FetchListsErrorAction;\r\n","/* eslint-disable no-console */\r\nimport axios from 'axios';\r\nimport { Dispatch } from 'redux';\r\nimport api from '../../common/constans/api';\r\nimport { ListsAction, ListsActionTypes } from '../types/lists';\r\n\r\nexport const fetchLists = (id: string) => async (dispatch: Dispatch<ListsAction>): Promise<void> => {\r\n  const url = `${api.baseURL}/board/${id}`;\r\n  try {\r\n    dispatch({ type: ListsActionTypes.FETCH_LISTS });\r\n    const response = await axios.get(url, {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: 'Bearer 123',\r\n      },\r\n    });\r\n    dispatch({ type: ListsActionTypes.FETCH_LISTS_SUCCESS, payload: response.data });\r\n  } catch (e) {\r\n    dispatch({ type: ListsActionTypes.FETCH_LISTS_ERROR, payload: \"Error. Boards info didn't load\" });\r\n  }\r\n};\r\n","export enum AddBoardActionTypes {\r\n  /* ADD_BOARD = 'ADD_BOARD', */\r\n  ADD_BOARD_SUCCESS = 'ADD_BOARD_SUCCESS',\r\n  ADD_BOARD_ERROR = 'ADD_BOARD_ERROR',\r\n}\r\n\r\nexport interface AddBoardState {\r\n  added: boolean;\r\n  error: null | string;\r\n}\r\ninterface AddBoardSuccessAction {\r\n  type: AddBoardActionTypes.ADD_BOARD_SUCCESS;\r\n  payload: boolean;\r\n}\r\ninterface AddBoardErrorAction {\r\n  type: AddBoardActionTypes.ADD_BOARD_ERROR;\r\n  payload: string;\r\n}\r\nexport type AddBoardActions = AddBoardSuccessAction | AddBoardErrorAction;\r\n","import axios from 'axios';\r\nimport { Dispatch } from 'redux';\r\nimport api from '../../common/constans/api';\r\nimport { AddBoardActions, AddBoardActionTypes } from '../types/addBoard';\r\n// import { fetchBoards } from './boards';\r\n\r\ntype ITitle = {\r\n  title: string;\r\n};\r\nconst url = `${api.baseURL}/board`;\r\nexport const addBoard = (newBoard: ITitle) => async (dispatch: Dispatch<AddBoardActions>): Promise<void> => {\r\n  try {\r\n    /* dispatch({ type: AddBoardActionTypes.ADD_BOARD, payload: false }); */\r\n    axios.post(url, newBoard, {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: 'Bearer 123',\r\n      },\r\n    });\r\n    dispatch({ type: AddBoardActionTypes.ADD_BOARD_SUCCESS, payload: true });\r\n  } catch (e) {\r\n    dispatch({ type: AddBoardActionTypes.ADD_BOARD_ERROR, payload: \"Error. Boards info don't load\" });\r\n  }\r\n};\r\n","export enum EditBoardActionTypes {\r\n  /* ADD_BOARD = 'ADD_BOARD', */\r\n  EDIT_BOARD_SUCCESS = 'EDIT_BOARD_SUCCESS',\r\n  EDIT_BOARD_ERROR = 'EDIT_BOARD_ERROR',\r\n}\r\n\r\nexport interface EditBoardState {\r\n  edited: boolean;\r\n  error: null | string;\r\n}\r\ninterface EditBoardSuccessAction {\r\n  type: EditBoardActionTypes.EDIT_BOARD_SUCCESS;\r\n  payload: boolean;\r\n}\r\ninterface EditBoardErrorAction {\r\n  type: EditBoardActionTypes.EDIT_BOARD_ERROR;\r\n  payload: string;\r\n}\r\nexport type EditBoardActions = EditBoardSuccessAction | EditBoardErrorAction;\r\n","import axios from 'axios';\r\nimport { Dispatch } from 'redux';\r\nimport { EditBoardActions, EditBoardActionTypes } from '../types/editBoard';\r\n\r\ntype ITitle = {\r\n  title: string;\r\n};\r\n\r\nexport const editBoard = (newBoard: ITitle, urlEdit: string) => async (\r\n  dispatch: Dispatch<EditBoardActions>\r\n): Promise<void> => {\r\n  try {\r\n    /* dispatch({ type: AddBoardActionTypes.ADD_BOARD, payload: false }); */\r\n    axios.put(urlEdit, newBoard, {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: 'Bearer 123',\r\n      },\r\n    });\r\n    dispatch({ type: EditBoardActionTypes.EDIT_BOARD_SUCCESS, payload: true });\r\n  } catch (e) {\r\n    dispatch({ type: EditBoardActionTypes.EDIT_BOARD_ERROR, payload: \"Error. Boards info don't load\" });\r\n  }\r\n};\r\n","export enum DeleteBoardActionTypes {\r\n  /* ADD_BOARD = 'ADD_BOARD', */\r\n  DELETE_BOARD_SUCCESS = 'DELETE_BOARD_SUCCESS',\r\n  DELETE_BOARD_ERROR = 'DELETE_BOARD_ERROR',\r\n}\r\n\r\nexport interface DeleteBoardState {\r\n  deleted: boolean;\r\n  error: null | string;\r\n}\r\ninterface DeleteBoardSuccessAction {\r\n  type: DeleteBoardActionTypes.DELETE_BOARD_SUCCESS;\r\n  payload: boolean;\r\n}\r\ninterface DeleteBoardErrorAction {\r\n  type: DeleteBoardActionTypes.DELETE_BOARD_ERROR;\r\n  payload: string;\r\n}\r\nexport type DeleteBoardActions = DeleteBoardSuccessAction | DeleteBoardErrorAction;\r\n","import axios from 'axios';\r\nimport { Dispatch } from 'redux';\r\nimport { DeleteBoardActions, DeleteBoardActionTypes } from '../types/deleteBoard';\r\n\r\nexport const deleteBoard = (url: string) => async (dispatch: Dispatch<DeleteBoardActions>): Promise<void> => {\r\n  try {\r\n    /* dispatch({ type: DeleteBoardActionTypes.Delete_BOARD, payload: false }); */\r\n    axios.delete(url, {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: 'Bearer 123',\r\n      },\r\n    });\r\n    dispatch({ type: DeleteBoardActionTypes.DELETE_BOARD_SUCCESS, payload: true });\r\n  } catch (e) {\r\n    dispatch({ type: DeleteBoardActionTypes.DELETE_BOARD_ERROR, payload: \"Error. Boards info don't load\" });\r\n  }\r\n};\r\n","export enum AddListActionTypes {\r\n  /* ADD_LIST = 'ADD_LIST', */\r\n  ADD_LIST_SUCCESS = 'ADD_LIST_SUCCESS',\r\n  ADD_LIST_ERROR = 'ADD_LIST_ERROR',\r\n}\r\n\r\nexport interface AddListState {\r\n  added: boolean;\r\n  error: null | string;\r\n}\r\ninterface AddListSuccessAction {\r\n  type: AddListActionTypes.ADD_LIST_SUCCESS;\r\n  payload: boolean;\r\n}\r\ninterface AddListErrorAction {\r\n  type: AddListActionTypes.ADD_LIST_ERROR;\r\n  payload: string;\r\n}\r\nexport type AddListActions = AddListSuccessAction | AddListErrorAction;\r\n","import axios from 'axios';\r\nimport { Dispatch } from 'redux';\r\nimport { AddListActions, AddListActionTypes } from '../types/addList';\r\n\r\ntype ITitle = {\r\n  title: string;\r\n};\r\n\r\nexport const addList = (url: string, newList: ITitle) => async (dispatch: Dispatch<AddListActions>): Promise<void> => {\r\n  try {\r\n    /* dispatch({ type: AddListActionTypes.ADD_List, payload: false }); */\r\n    axios.post(url, newList, {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: 'Bearer 123',\r\n      },\r\n    });\r\n    dispatch({ type: AddListActionTypes.ADD_LIST_SUCCESS, payload: true });\r\n  } catch (e) {\r\n    dispatch({ type: AddListActionTypes.ADD_LIST_ERROR, payload: \"Error. Lists info don't load\" });\r\n  }\r\n};\r\n","export enum DeleteListActionTypes {\r\n  DELETE_LIST_SUCCESS = 'DELETE_List_SUCCESS',\r\n  DELETE_LIST_ERROR = 'DELETE_List_ERROR',\r\n}\r\n\r\nexport interface DeleteListState {\r\n  deleted: boolean;\r\n  error: null | string;\r\n}\r\ninterface DeleteListSuccessAction {\r\n  type: DeleteListActionTypes.DELETE_LIST_SUCCESS;\r\n  payload: boolean;\r\n}\r\ninterface DeleteListErrorAction {\r\n  type: DeleteListActionTypes.DELETE_LIST_ERROR;\r\n  payload: string;\r\n}\r\nexport type DeleteListActions = DeleteListSuccessAction | DeleteListErrorAction;\r\n","import axios from 'axios';\r\nimport { Dispatch } from 'redux';\r\nimport { DeleteListActions, DeleteListActionTypes } from '../types/deleteList';\r\n\r\nexport const deleteList = (url: string) => async (dispatch: Dispatch<DeleteListActions>): Promise<void> => {\r\n  try {\r\n    /* dispatch({ type: DeleteListActionTypes.Delete_List, payload: false }); */\r\n    axios.delete(url, {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: 'Bearer 123',\r\n      },\r\n    });\r\n    dispatch({ type: DeleteListActionTypes.DELETE_LIST_SUCCESS, payload: true });\r\n  } catch (e) {\r\n    dispatch({ type: DeleteListActionTypes.DELETE_LIST_ERROR, payload: \"Error. Lists info don't load\" });\r\n  }\r\n};\r\n","export enum AddCardActionTypes {\r\n  /* ADD_Card = 'ADD_Card', */\r\n  ADD_CARD_SUCCESS = 'ADD_CARD_SUCCESS',\r\n  ADD_CARD_ERROR = 'ADD_Card_ERROR',\r\n}\r\n\r\nexport interface AddCardState {\r\n  added: boolean;\r\n  error: null | string;\r\n}\r\ninterface AddCardSuccessAction {\r\n  type: AddCardActionTypes.ADD_CARD_SUCCESS;\r\n  payload: boolean;\r\n}\r\ninterface AddCardErrorAction {\r\n  type: AddCardActionTypes.ADD_CARD_ERROR;\r\n  payload: string;\r\n}\r\nexport type AddCardActions = AddCardSuccessAction | AddCardErrorAction;\r\n","import axios from 'axios';\r\nimport { Dispatch } from 'redux';\r\nimport { AddCardActions, AddCardActionTypes } from '../types/addCard';\r\n\r\ntype ITitle = {\r\n  title: string;\r\n};\r\n\r\nexport const addCard = (url: string, newCard: ITitle) => async (dispatch: Dispatch<AddCardActions>): Promise<void> => {\r\n  try {\r\n    /* dispatch({ type: AddCardActionTypes.ADD_Card, payload: false }); */\r\n    axios.post(url, newCard, {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: 'Bearer 123',\r\n      },\r\n    });\r\n    dispatch({ type: AddCardActionTypes.ADD_CARD_SUCCESS, payload: true });\r\n  } catch (e) {\r\n    dispatch({ type: AddCardActionTypes.ADD_CARD_ERROR, payload: \"Error. Cards info don't load\" });\r\n  }\r\n};\r\n","export enum EditListActionTypes {\r\n  /* ADD_List = 'ADD_List', */\r\n  EDIT_LIST_SUCCESS = 'EDIT_LIST_SUCCESS',\r\n  EDIT_LIST_ERROR = 'EDIT_LIST_ERROR',\r\n}\r\n\r\nexport interface EditListState {\r\n  edited: boolean;\r\n  error: null | string;\r\n}\r\ninterface EditListSuccessAction {\r\n  type: EditListActionTypes.EDIT_LIST_SUCCESS;\r\n  payload: boolean;\r\n}\r\ninterface EditListErrorAction {\r\n  type: EditListActionTypes.EDIT_LIST_ERROR;\r\n  payload: string;\r\n}\r\nexport type EditListActions = EditListSuccessAction | EditListErrorAction;\r\n","import axios from 'axios';\r\nimport { Dispatch } from 'redux';\r\nimport { EditListActions, EditListActionTypes } from '../types/editList';\r\n\r\ntype Data = {\r\n  position: number;\r\n  title: string;\r\n};\r\n\r\nexport const editList = (newData: Data, urlEdit: string) => async (\r\n  dispatch: Dispatch<EditListActions>\r\n): Promise<void> => {\r\n  try {\r\n    /* dispatch({ type: AddListActionTypes.ADD_List, payload: false }); */\r\n    axios.put(urlEdit, newData, {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: 'Bearer 123',\r\n      },\r\n    });\r\n    dispatch({ type: EditListActionTypes.EDIT_LIST_SUCCESS, payload: true });\r\n  } catch (e) {\r\n    dispatch({ type: EditListActionTypes.EDIT_LIST_ERROR, payload: \"Error. Lists title didn't change\" });\r\n  }\r\n};\r\n","export enum DeleteCardActionTypes {\r\n  DELETE_CARD_SUCCESS = 'DELETE_CARD_SUCCESS',\r\n  DELETE_CARD_ERROR = 'DELETE_CARD_ERROR',\r\n}\r\n\r\nexport interface DeleteCardState {\r\n  deleted: boolean;\r\n  error: null | string;\r\n}\r\ninterface DeleteCardSuccessAction {\r\n  type: DeleteCardActionTypes.DELETE_CARD_SUCCESS;\r\n  payload: boolean;\r\n}\r\ninterface DeleteCardErrorAction {\r\n  type: DeleteCardActionTypes.DELETE_CARD_ERROR;\r\n  payload: string;\r\n}\r\nexport type DeleteCardActions = DeleteCardSuccessAction | DeleteCardErrorAction;\r\n","import axios from 'axios';\r\nimport { Dispatch } from 'redux';\r\nimport { DeleteCardActions, DeleteCardActionTypes } from '../types/deleteCard';\r\n\r\nexport const deleteCard = (url: string) => async (dispatch: Dispatch<DeleteCardActions>): Promise<void> => {\r\n  try {\r\n    /* dispatch({ type: DeleteCardActionTypes.Delete_Card, payload: false }); */\r\n    axios.delete(url, {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: 'Bearer 123',\r\n      },\r\n    });\r\n    dispatch({ type: DeleteCardActionTypes.DELETE_CARD_SUCCESS, payload: true });\r\n  } catch (e) {\r\n    dispatch({ type: DeleteCardActionTypes.DELETE_CARD_ERROR, payload: \"Error. Cards didn't delete\" });\r\n  }\r\n};\r\n","export enum EditCardActionTypes {\r\n  /* ADD_Card = 'ADD_Card', */\r\n  EDIT_CARD_SUCCESS = 'EDIT_Card_SUCCESS',\r\n  EDIT_CARD_ERROR = 'EDIT_Card_ERROR',\r\n}\r\n\r\nexport interface EditCardState {\r\n  edited: boolean;\r\n  error: null | string;\r\n}\r\ninterface EditCardSuccessAction {\r\n  type: EditCardActionTypes.EDIT_CARD_SUCCESS;\r\n  payload: boolean;\r\n}\r\ninterface EditCardErrorAction {\r\n  type: EditCardActionTypes.EDIT_CARD_ERROR;\r\n  payload: string;\r\n}\r\nexport type EditCardActions = EditCardSuccessAction | EditCardErrorAction;\r\n","import axios from 'axios';\r\nimport { Dispatch } from 'redux';\r\nimport { EditCardActions, EditCardActionTypes } from '../types/editCard';\r\n\r\ntype Data = {\r\n  title: string;\r\n  list_id: number;\r\n};\r\n\r\nexport const editCard = (newData: Data, urlEdit: string) => async (\r\n  dispatch: Dispatch<EditCardActions>\r\n): Promise<void> => {\r\n  try {\r\n    /* dispatch({ type: AddCardActionTypes.ADD_Card, payload: false }); */\r\n    axios.put(urlEdit, newData, {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: 'Bearer 123',\r\n      },\r\n    });\r\n    dispatch({ type: EditCardActionTypes.EDIT_CARD_SUCCESS, payload: true });\r\n  } catch (e) {\r\n    dispatch({ type: EditCardActionTypes.EDIT_CARD_ERROR, payload: \"Error. Card title didn't change\" });\r\n  }\r\n};\r\n","import * as BoardsActionCreators from './boards';\r\nimport * as ListsActionCreators from './lists';\r\nimport * as BoardActionCreators from './boardPost';\r\nimport * as BoardEditActionCreators from './editBoard';\r\nimport * as BoardDeleteActionCreators from './boardDelete';\r\nimport * as ListAddActionCreators from './listAdd';\r\nimport * as ListDeleteActionCreators from './listDelete';\r\nimport * as CardAddActionCreators from './cardAdd';\r\nimport * as ListEditActionCreators from './editList';\r\nimport * as CardDeleteActionCreators from './cardDelete';\r\nimport * as CardEditActionCreators from './editCard';\r\n\r\nexport default {\r\n  ...BoardsActionCreators,\r\n  ...ListsActionCreators,\r\n  ...BoardActionCreators,\r\n  ...BoardEditActionCreators,\r\n  ...BoardDeleteActionCreators,\r\n  ...ListAddActionCreators,\r\n  ...ListDeleteActionCreators,\r\n  ...CardAddActionCreators,\r\n  ...ListEditActionCreators,\r\n  ...CardDeleteActionCreators,\r\n  ...CardEditActionCreators,\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-function-return-type */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useDispatch } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport ActionCreators from '../store/actions';\r\n\r\nexport const useActions = () => {\r\n  const dispatch = useDispatch();\r\n  return bindActionCreators(ActionCreators, dispatch);\r\n};\r\n","import { TypedUseSelectorHook, useSelector } from 'react-redux';\r\nimport { RootState } from '../store/reducers';\r\n\r\nexport const useTypeSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n","export const DANGER_NAME =\r\n  'The value is empty or contains errors. Allowed characters: letters, numbers, spaces, dashes, dots, underscores.';\r\nexport const SUCCESS_BOARD_NAME = 'New board was created successfully!';\r\nexport const SUCCESS_BOARD_NAME_EDIT = 'Board title was edited successfully!';\r\nexport const SUCCESS_LIST_NAME = 'New list was created successfully!';\r\nexport const SUCCESS_LIST_NAME_EDIT = 'Board list was edited successfully!';\r\n","import React from 'react';\r\n\r\ntype AlertType = {\r\n  show: boolean;\r\n  text: string;\r\n  danger: boolean;\r\n};\r\nexport const Alert: React.FC<AlertType> = ({ show, text, danger }) =>\r\n  show ? (\r\n    <div className={danger ? 'alert alert-danger' : 'alert alert-success'} role=\"alert\">\r\n      {text}\r\n    </div>\r\n  ) : (\r\n    <></>\r\n  );\r\n","export function isValidTitle(title: string): boolean {\r\n  const newStr = title.trim().replaceAll(/^[а-яА-ЯёЁa-zA-z0-9\\s,-_.]+/gm, '');\r\n  return newStr.length === 0 && title !== '';\r\n}\r\n","/* eslint-disable no-console */\r\nimport React, { useState } from 'react';\r\nimport { DANGER_NAME, SUCCESS_BOARD_NAME } from '../../../common/constans/messages';\r\nimport { Alert } from '../../../components/Alert';\r\nimport { isValidTitle } from '../../../functions/validTitles';\r\nimport { useActions } from '../../../hooks/useActions';\r\nimport './boardCreate.css';\r\n\r\ntype ITitle = {\r\n  title: string;\r\n};\r\n\r\ntype IProps = {\r\n  startTitle: string;\r\n  isCreate: boolean;\r\n  urlEdit: string;\r\n};\r\nconst BoardCreate: React.FC<IProps> = ({ startTitle, isCreate }) => {\r\n  const [title, setTitle] = useState<string>(startTitle);\r\n  const [isAlert, setAlert] = useState<boolean>(false);\r\n  const [isDanger, setDanger] = useState<boolean>(false);\r\n  const [textAlert, setTextAlert] = useState<string>('');\r\n  const newBoard: ITitle = { title };\r\n  const changeHandler = (event: React.ChangeEvent<HTMLInputElement>): void => setTitle(event.target.value);\r\n  const { addBoard, fetchBoards } = useActions();\r\n\r\n  function setUpAlert(alrt: boolean, dang: boolean, text: string): void {\r\n    setAlert(alrt);\r\n    setDanger(dang);\r\n    setTextAlert(text);\r\n    setTimeout(() => {\r\n      setTitle('');\r\n      setAlert(false);\r\n    }, 3000);\r\n  }\r\n  return (\r\n    <div className=\"container\">\r\n      <Alert show={isAlert} text={textAlert} danger={isDanger} />\r\n      <div className=\"fields mb-4\">\r\n        <div className=\"field mr-4\">\r\n          <input onChange={changeHandler} value={title} type=\"text\" id=\"title\" placeholder=\"Enter board name\" />\r\n        </div>\r\n      </div>\r\n      <button\r\n        className=\"btn btn-success mr-2 btn-new-board\"\r\n        onClick={(): void => {\r\n          if (isValidTitle(title)) {\r\n            addBoard(newBoard);\r\n            fetchBoards();\r\n            setUpAlert(true, false, SUCCESS_BOARD_NAME);\r\n          } else {\r\n            setUpAlert(true, true, DANGER_NAME);\r\n          }\r\n        }}\r\n      >\r\n        {isCreate ? 'Add board' : 'Edit board'}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BoardCreate;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport styled from 'styled-components';\r\n\r\ninterface ModalProps {\r\n  onBackDropClick: () => void;\r\n}\r\n\r\nconst Overlay = styled.div`\r\n  background-color: rgba(0, 0, 0, 0.7);\r\n  position: fixed;\r\n  height: 100%;\r\n  width: 100%;\r\n  top: 0;\r\n  left: 0;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Modal: React.FC<ModalProps> = ({ onBackDropClick, children }) =>\r\n  ReactDOM.createPortal(\r\n    <Overlay onClick={onBackDropClick}>\r\n      <div onClick={(e): void => e.stopPropagation()}>{children}</div>\r\n    </Overlay>,\r\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n    document.getElementById('modal-root')!\r\n  );\r\n\r\nexport default Modal;\r\n","import styled from 'styled-components';\r\n\r\nconst ModalContainer = styled.div`\r\n  background-color: #ffffff;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  position: relative;\r\n`;\r\nexport const DesktopModalContainer = styled(ModalContainer)`\r\n  border-radius: 7px;\r\n  box-shadow: 0 0 32px rgba(0, 0, 0, 0.5);\r\n  padding: 40px;\r\n  width: 450px;\r\n  font-size: 26px;\r\n`;\r\nexport const Header = styled.h3`\r\n  color: #25306c;\r\n  font-size: 35px;\r\n  line-height: 1em;\r\n  font-weight: bold;\r\n  margin: 5px 0 10px;\r\n  text-align: center;\r\n`;\r\n\r\nexport const Close = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 80%;\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport BoardCreate from './boardCreate/BoardCreate';\r\nimport Modal from './Modal';\r\nimport { Close, DesktopModalContainer, Header } from './ModalPopup.styles';\r\n\r\ninterface BaseModalWrapperProps {\r\n  isModalVisible: boolean;\r\n  onBackDropClick: () => void;\r\n  startTitle: string;\r\n  isCreate: boolean;\r\n  urlEdit: string;\r\n}\r\n\r\nconst BaseModalWrapper: React.FC<BaseModalWrapperProps> = ({\r\n  isModalVisible,\r\n  onBackDropClick,\r\n  startTitle,\r\n  isCreate,\r\n  urlEdit,\r\n}) => {\r\n  if (!isModalVisible) {\r\n    return null;\r\n  }\r\n  return (\r\n    <Modal onBackDropClick={onBackDropClick}>\r\n      <DesktopModalContainer>\r\n        <Close onClick={(): void => onBackDropClick()}>x</Close>\r\n        <Header>{isCreate ? 'Add new board' : 'Edit board title'}</Header>\r\n        <BoardCreate startTitle={startTitle} isCreate={isCreate} urlEdit={urlEdit} />\r\n      </DesktopModalContainer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default BaseModalWrapper;\r\n","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useActions } from '../../../../hooks/useActions';\r\n\r\ntype IUrl = {\r\n  url: string;\r\n};\r\n\r\nconst DeleteBoard: React.FC<IUrl> = ({ url }) => {\r\n  const history = useHistory();\r\n  const { deleteBoard } = useActions();\r\n  return (\r\n    <button\r\n      className=\"btn btn-danger deleteBoard ml-4\"\r\n      onClick={(): void => {\r\n        deleteBoard(url);\r\n        history.push('/');\r\n      }}\r\n    >\r\n      Delete\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default DeleteBoard;\r\n","import React, { useRef, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { DANGER_NAME, SUCCESS_BOARD_NAME_EDIT } from '../../../../common/constans/messages';\r\nimport { Alert } from '../../../../components/Alert';\r\nimport { isValidTitle } from '../../../../functions/validTitles';\r\nimport { useActions } from '../../../../hooks/useActions';\r\nimport DeleteBoard from '../DeleteBoard/DeleteBoard';\r\n\r\ntype IData = {\r\n  url: string;\r\n  startTitle: string;\r\n};\r\n\r\ntype ITitle = {\r\n  title: string;\r\n};\r\n\r\nconst BoardHeader: React.FC<IData> = ({ url, startTitle }) => {\r\n  const [title, setTitle] = useState<string>(startTitle);\r\n  const [isAlert, setAlert] = useState<boolean>(false);\r\n  const [isDanger, setDanger] = useState<boolean>(false);\r\n  const [textAlert, setTextAlert] = useState<string>('');\r\n  function setUpAlert(alrt: boolean, dang: boolean, text: string): void {\r\n    setAlert(alrt);\r\n    setDanger(dang);\r\n    setTextAlert(text);\r\n    setTimeout(() => {\r\n      setTitle(startTitle);\r\n      setAlert(false);\r\n    }, 3000);\r\n  }\r\n  const { editBoard } = useActions();\r\n  const inputEl = useRef<HTMLInputElement>(null);\r\n  const changeHandler = (event: React.ChangeEvent<HTMLInputElement>): void => setTitle(event.target.value);\r\n  const newBoard: ITitle = { title };\r\n  function editTile(): void {\r\n    if (isValidTitle(title)) {\r\n      setUpAlert(true, false, SUCCESS_BOARD_NAME_EDIT);\r\n      editBoard(newBoard, url);\r\n    } else {\r\n      setUpAlert(true, true, DANGER_NAME);\r\n    }\r\n  }\r\n  const keyPressHandler = (event: React.KeyboardEvent): void => {\r\n    if (event.key === 'Enter') {\r\n      editTile();\r\n    }\r\n  };\r\n\r\n  const blurHandler = (): void => {\r\n    if (startTitle !== title) {\r\n      editTile();\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"board-header container my-4\">\r\n      <Link to=\"/\">Home</Link>\r\n      <div className=\"board-header-title mt-4\">\r\n        <Alert show={isAlert} text={textAlert} danger={isDanger} />\r\n        <div className=\"input-row\">\r\n          <input\r\n            className=\"h1\"\r\n            ref={inputEl}\r\n            type=\"text\"\r\n            placeholder={title}\r\n            value={title}\r\n            onChange={changeHandler}\r\n            onKeyPress={keyPressHandler}\r\n            onBlur={blurHandler}\r\n          />\r\n\r\n          <DeleteBoard url={url} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BoardHeader;\r\n","import React from 'react';\r\nimport { IconContext } from 'react-icons';\r\nimport { FaTrashAlt } from 'react-icons/fa';\r\nimport { useActions } from '../../../../../../../hooks/useActions';\r\n\r\ntype Props = {\r\n  url: string;\r\n  id: number;\r\n  boardID: string;\r\n};\r\n\r\nconst DeleteCard: React.FC<Props> = ({ url, id, boardID }) => {\r\n  const { fetchLists, deleteCard } = useActions();\r\n  return (\r\n    <div className=\"icon__inner mr-2 my-2\">\r\n      <IconContext.Provider value={{ className: 'trash-list' }}>\r\n        <FaTrashAlt\r\n          onClick={(): void => {\r\n            deleteCard(`${url}/card/${id}`);\r\n            fetchLists(boardID);\r\n          }}\r\n        />\r\n      </IconContext.Provider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DeleteCard;\r\n","import React, { useRef, useState } from 'react';\r\nimport { DANGER_NAME } from '../../../../../../common/constans/messages';\r\nimport { Alert } from '../../../../../../components/Alert';\r\nimport { isValidTitle } from '../../../../../../functions/validTitles';\r\nimport { useActions } from '../../../../../../hooks/useActions';\r\nimport { ICard } from '../../../../../../interfaces/inrefaces';\r\nimport DeleteCard from './DeleteCard/DeleteCard';\r\n\r\ntype Props = {\r\n  card: ICard;\r\n  url: string;\r\n  boardID: string;\r\n  listID: number;\r\n};\r\ntype Data = {\r\n  title: string;\r\n  list_id: number;\r\n};\r\n\r\nconst Card: React.FC<Props> = ({ card, url, boardID, listID }) => {\r\n  const inputEl = useRef<HTMLInputElement>(null);\r\n  const [title, setTitle] = useState<string>(card.title);\r\n  const [isAlert, setAlert] = useState<boolean>(false);\r\n  const [isDanger, setDanger] = useState<boolean>(false);\r\n  const [textAlert, setTextAlert] = useState<string>('');\r\n  const changeHandler = (event: React.ChangeEvent<HTMLInputElement>): void => setTitle(event.target.value);\r\n  const { editCard, fetchLists } = useActions();\r\n  const newData: Data = { list_id: listID, title };\r\n\r\n  function setUpAlert(alrt: boolean, dang: boolean, text: string): void {\r\n    setAlert(alrt);\r\n    setDanger(dang);\r\n    setTextAlert(text);\r\n    setTimeout(() => {\r\n      setTitle(card.title);\r\n      setAlert(false);\r\n    }, 3000);\r\n  }\r\n\r\n  function editTile(): void {\r\n    if (isValidTitle(title)) {\r\n      editCard(newData, `${url}/card/${card.id}`);\r\n      fetchLists(boardID);\r\n    } else {\r\n      setUpAlert(true, true, DANGER_NAME);\r\n    }\r\n  }\r\n  const keyPressHandler = (event: React.KeyboardEvent): void => {\r\n    if (event.key === 'Enter') {\r\n      editTile();\r\n    }\r\n  };\r\n\r\n  const blurHandler = (): void => {\r\n    if (card.title !== title) {\r\n      editTile();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <li className=\"card list-item\">\r\n      <DeleteCard url={url} id={card.id} boardID={boardID} />\r\n      <Alert show={isAlert} text={textAlert} danger={isDanger} />\r\n      <div className=\"card__inner\">\r\n        <input\r\n          ref={inputEl}\r\n          type=\"text\"\r\n          placeholder={card.title}\r\n          value={title}\r\n          onChange={changeHandler}\r\n          onKeyPress={keyPressHandler}\r\n          onBlur={blurHandler}\r\n          className=\"listTitle\"\r\n        />\r\n        {card.description !== '' ? <p>{card.description}</p> : null}\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","/* eslint-disable no-console */\r\nimport React, { useState } from 'react';\r\nimport { DANGER_NAME, SUCCESS_LIST_NAME } from '../../../../common/constans/messages';\r\nimport { Alert } from '../../../../components/Alert';\r\nimport { isValidTitle } from '../../../../functions/validTitles';\r\nimport { useActions } from '../../../../hooks/useActions';\r\nimport './addList.css';\r\n\r\ntype Props = {\r\n  url: string;\r\n  countLists: number;\r\n  boardID: string;\r\n};\r\n\r\nconst AddList: React.FC<Props> = ({ url, countLists, boardID }) => {\r\n  const [title, setTitle] = useState<string>('');\r\n  const [isAlert, setAlert] = useState<boolean>(false);\r\n  const [isDanger, setDanger] = useState<boolean>(false);\r\n  const [textAlert, setTextAlert] = useState<string>('');\r\n  const changeHandler = (event: React.ChangeEvent<HTMLInputElement>): void => setTitle(event.target.value);\r\n  const { addList, fetchLists } = useActions();\r\n\r\n  function setUpAlert(alrt: boolean, dang: boolean, text: string): void {\r\n    setAlert(alrt);\r\n    setDanger(dang);\r\n    setTextAlert(text);\r\n    setTimeout(() => {\r\n      setTitle('');\r\n      setAlert(false);\r\n    }, 5000);\r\n  }\r\n\r\n  return (\r\n    <div className=\"list-input-outside\">\r\n      <Alert show={isAlert} text={textAlert} danger={isDanger} />\r\n      <div className=\"list-input mt-2\">\r\n        <input type=\"text\" id=\"addList\" placeholder=\"Enter list name\" onChange={changeHandler} value={title} />\r\n        <button\r\n          className=\"btn btn-primary ml-2\"\r\n          onClick={(): void => {\r\n            if (isValidTitle(title)) {\r\n              const newList = { title, position: countLists + 1 };\r\n              addList(`${url}/list`, newList);\r\n              setUpAlert(true, false, SUCCESS_LIST_NAME);\r\n              fetchLists(boardID);\r\n            } else {\r\n              setUpAlert(true, true, DANGER_NAME);\r\n            }\r\n          }}\r\n        >\r\n          Add List\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddList;\r\n","import React from 'react';\r\n// import { IList } from '../../../../../interfaces/inrefaces';\r\nimport AddList from '../../../AddList/AddList';\r\n\r\ntype Props = {\r\n  url: string;\r\n  arrLenght: number;\r\n  boardID: string;\r\n  lists: JSX.Element | JSX.Element[];\r\n};\r\nconst ListMain: React.FC<Props> = ({ url, arrLenght, boardID, lists }) => (\r\n  <div className=\"lists-main\">\r\n    <div className=\"input-row mb-4\">\r\n      <AddList url={url} countLists={arrLenght} boardID={boardID} />\r\n      <div className=\"count-lists\">Всего списков: {arrLenght}</div>\r\n    </div>\r\n    <div className=\"cards\">{lists}</div>\r\n  </div>\r\n);\r\n\r\nexport default ListMain;\r\n","import React from 'react';\r\nimport { IconContext } from 'react-icons';\r\nimport { FaTrashAlt } from 'react-icons/fa';\r\nimport { useActions } from '../../../../hooks/useActions';\r\n\r\ntype Props = {\r\n  url: string;\r\n  id: string;\r\n  boardID: string;\r\n};\r\n\r\nconst DeleteList: React.FC<Props> = ({ url, id, boardID }) => {\r\n  const { fetchLists, deleteList } = useActions();\r\n  return (\r\n    <div className=\"icon__inner\">\r\n      <IconContext.Provider value={{ className: 'trash-list' }}>\r\n        <FaTrashAlt\r\n          onClick={(): void => {\r\n            deleteList(`${url}/list/${id}`);\r\n            fetchLists(boardID);\r\n          }}\r\n        />\r\n      </IconContext.Provider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DeleteList;\r\n","import React, { useState } from 'react';\r\nimport { DANGER_NAME, SUCCESS_LIST_NAME } from '../../../../common/constans/messages';\r\nimport { Alert } from '../../../../components/Alert';\r\nimport { isValidTitle } from '../../../../functions/validTitles';\r\nimport { useActions } from '../../../../hooks/useActions';\r\nimport './addCard.css';\r\n\r\ntype Props = {\r\n  url: string;\r\n  position: number;\r\n  list_id: number;\r\n  boardID: string;\r\n};\r\n\r\nconst AddCard: React.FC<Props> = ({ url, position, list_id, boardID }) => {\r\n  const [title, setTitle] = useState<string>('');\r\n  const [isAlert, setAlert] = useState<boolean>(false);\r\n  const [isDanger, setDanger] = useState<boolean>(false);\r\n  const [textAlert, setTextAlert] = useState<string>('');\r\n  const changeHandler = (event: React.ChangeEvent<HTMLInputElement>): void => setTitle(event.target.value);\r\n  const { addCard, fetchLists } = useActions();\r\n\r\n  function setUpAlert(alrt: boolean, dang: boolean, text: string): void {\r\n    setAlert(alrt);\r\n    setDanger(dang);\r\n    setTextAlert(text);\r\n    setTimeout(() => {\r\n      setTitle('');\r\n      setAlert(false);\r\n    }, 3000);\r\n  }\r\n\r\n  return (\r\n    <div className=\"card-input-outside\">\r\n      <Alert show={isAlert} text={textAlert} danger={isDanger} />\r\n      <div className=\"card-input mt-2\">\r\n        <input\r\n          className=\"card-title\"\r\n          type=\"text\"\r\n          placeholder=\"Enter card title\"\r\n          onChange={changeHandler}\r\n          value={title}\r\n        />\r\n        <button\r\n          className=\"btn btn-primary ml-2\"\r\n          onClick={(): void => {\r\n            if (isValidTitle(title)) {\r\n              const newCard = { title, list_id, position };\r\n              addCard(`${url}/card`, newCard);\r\n              fetchLists(boardID);\r\n              setUpAlert(true, false, SUCCESS_LIST_NAME);\r\n            } else {\r\n              setUpAlert(true, true, DANGER_NAME);\r\n            }\r\n          }}\r\n        >\r\n          Add Card\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddCard;\r\n","import React, { useState } from 'react';\r\nimport { FaPlus } from 'react-icons/fa';\r\nimport { IconContext } from 'react-icons/lib';\r\nimport { IList } from '../../../../../../interfaces/inrefaces';\r\nimport AddCard from '../../../AddCard/AddCard';\r\n\r\nimport './addCardInput.css';\r\n\r\ntype Props = {\r\n  url: string;\r\n  list: IList;\r\n  boardID: string;\r\n};\r\n\r\nconst AddCardInput: React.FC<Props> = ({ url, list, boardID }) => {\r\n  const [isCardAddVisible, setCardAddVisible] = useState(false);\r\n  const toggleCardAdd = (): void => {\r\n    setCardAddVisible((wasVisible) => !wasVisible);\r\n  };\r\n  return (\r\n    <div className=\"addCardInput\">\r\n      <div className=\"iconPlus__inner\">\r\n        <IconContext.Provider value={{ className: 'trash-list' }}>\r\n          <FaPlus onClick={toggleCardAdd} />\r\n        </IconContext.Provider>\r\n      </div>\r\n      {isCardAddVisible ? <AddCard url={url} position={list.position} list_id={list.id} boardID={boardID} /> : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddCardInput;\r\n","/* eslint-disable no-console */\r\nimport React, { useRef, useState } from 'react';\r\nimport { DANGER_NAME } from '../../../../../../common/constans/messages';\r\nimport { Alert } from '../../../../../../components/Alert';\r\nimport { isValidTitle } from '../../../../../../functions/validTitles';\r\nimport { useActions } from '../../../../../../hooks/useActions';\r\n\r\ntype Props = {\r\n  startTitle: string;\r\n  position: number;\r\n  url: string;\r\n  boardID: string;\r\n};\r\n\r\ntype Data = {\r\n  position: number;\r\n  title: string;\r\n};\r\n\r\nconst ListTitle: React.FC<Props> = ({ startTitle, position, url, boardID }) => {\r\n  const [title, setTitle] = useState<string>(startTitle);\r\n  const [isAlert, setAlert] = useState<boolean>(false);\r\n  const [isDanger, setDanger] = useState<boolean>(false);\r\n  const [textAlert, setTextAlert] = useState<string>('');\r\n  const newPos: Data = { position, title };\r\n  const inputEl = useRef<HTMLInputElement>(null);\r\n  const changeHandler = (event: React.ChangeEvent<HTMLInputElement>): void => setTitle(event.target.value);\r\n\r\n  function setUpAlert(alrt: boolean, dang: boolean, text: string): void {\r\n    setAlert(alrt);\r\n    setDanger(dang);\r\n    setTextAlert(text);\r\n    setTimeout(() => {\r\n      setTitle(startTitle);\r\n      setAlert(false);\r\n    }, 3000);\r\n  }\r\n\r\n  const { editList, fetchLists } = useActions();\r\n\r\n  function editTile(): void {\r\n    if (isValidTitle(title)) {\r\n      editList(newPos, url);\r\n      fetchLists(boardID);\r\n    } else {\r\n      setUpAlert(true, true, DANGER_NAME);\r\n    }\r\n  }\r\n  const keyPressHandler = (event: React.KeyboardEvent): void => {\r\n    if (event.key === 'Enter') {\r\n      editTile();\r\n    }\r\n  };\r\n\r\n  const blurHandler = (): void => {\r\n    if (startTitle !== title) {\r\n      editTile();\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"listTitleMain\">\r\n      <Alert show={isAlert} text={textAlert} danger={isDanger} />\r\n      <input\r\n        ref={inputEl}\r\n        type=\"text\"\r\n        placeholder={startTitle}\r\n        value={title}\r\n        onChange={changeHandler}\r\n        onKeyPress={keyPressHandler}\r\n        onBlur={blurHandler}\r\n        className=\"listTitle\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ListTitle;\r\n","import React from 'react';\r\nimport { IList } from '../../../../../../interfaces/inrefaces';\r\nimport DeleteList from '../../../DeleteList/DeleteList';\r\nimport AddCardInput from '../AddCardInput/AddCardInput';\r\nimport ListTitle from '../ListTitle/ListTitle';\r\n\r\ntype Props = {\r\n  list: IList;\r\n  url: string;\r\n  id: string;\r\n  boardID: string;\r\n  cards: JSX.Element[];\r\n};\r\n\r\nconst ListInner: React.FC<Props> = ({ list, url, id, boardID, cards }) => (\r\n  <div className=\"card list col-md-3 mx-2\">\r\n    <DeleteList url={url} id={id} boardID={boardID} />\r\n    <p>{list.position}</p>\r\n    <ListTitle startTitle={list.title} position={list.position} url={`${url}/list/${id}`} boardID={boardID} />\r\n    <ul className=\"list-items\">{cards}</ul>\r\n    <AddCardInput url={url} list={list} boardID={boardID} />\r\n  </div>\r\n);\r\n\r\nexport default ListInner;\r\n","/* eslint-disable no-console */\r\nimport React from 'react';\r\n// import { useActions } from '../../../../hooks/useActions';\r\n// import { useTypeSelector } from '../../../../hooks/useTypeSelector';\r\nimport Card from './components/Card/Card';\r\nimport './lists.css';\r\nimport ListMain from './components/ListsMain/ListMain';\r\nimport ListInner from './components/ListInner/ListInner';\r\nimport { ILists } from '../../../../interfaces/inrefaces';\r\n\r\ntype Props = {\r\n  url: string;\r\n  boardID: string;\r\n  getLists: ILists;\r\n};\r\n\r\nconst Lists: React.FC<Props> = ({ url, boardID, getLists }) => {\r\n  const arr = Object.keys(getLists.lists);\r\n  const arrLenght = arr.length;\r\n\r\n  const lists =\r\n    arrLenght !== 0 ? (\r\n      arr.map((id) => {\r\n        const list = getLists.lists[Number(id)];\r\n        const cards = Object.keys(list.cards).map((idCard) => {\r\n          const card = list.cards[Number(idCard)];\r\n          return <Card key={card.id} card={card} url={url} boardID={boardID} listID={Number(id)} />;\r\n        });\r\n\r\n        return <ListInner key={id} list={list} url={url} id={id} boardID={boardID} cards={cards} />;\r\n      })\r\n    ) : (\r\n      <h2>Any lists yet. Create your first list!</h2>\r\n    );\r\n\r\n  return <ListMain url={url} arrLenght={arrLenght} boardID={boardID} lists={lists} />;\r\n};\r\n\r\nexport default Lists;\r\n","/* eslint-disable no-console */\r\nimport React, { useEffect, useState } from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport api from '../../common/constans/api';\r\nimport { useActions } from '../../hooks/useActions';\r\nimport { useTypeSelector } from '../../hooks/useTypeSelector';\r\nimport BaseModalWrapper from '../Modal/BaseModalWrapper';\r\nimport './board.css';\r\nimport BoardHeader from './components/BoardHeader/BoardHeader';\r\nimport Lists from './components/Lists/Lists';\r\n\r\ntype TParams = { id: string };\r\n\r\nconst Board: React.FC<RouteComponentProps<TParams>> = ({ match }) => {\r\n  const url = `${api.baseURL}/board/${match.params.id}`;\r\n  const [isModalVisible, setModalVisible] = useState(false);\r\n  const toggleModal = (): void => {\r\n    setModalVisible((wasModalVisible) => !wasModalVisible);\r\n  };\r\n\r\n  const { getLists, error, loading } = useTypeSelector((state) => state.lists);\r\n  const { fetchLists } = useActions();\r\n\r\n  useEffect(() => {\r\n    const abortController = new AbortController();\r\n    fetchLists(match.params.id);\r\n    return (): void => {\r\n      abortController.abort();\r\n    };\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <h2>Loading...</h2>;\r\n  }\r\n\r\n  if (error) {\r\n    return <h2>{error}</h2>;\r\n  }\r\n\r\n  const { title } = getLists;\r\n  return (\r\n    <>\r\n      <BoardHeader url={url} startTitle={title} />\r\n      <Lists url={url} boardID={match.params.id} getLists={getLists} />\r\n      <BaseModalWrapper\r\n        isModalVisible={isModalVisible}\r\n        onBackDropClick={toggleModal}\r\n        startTitle=\"\"\r\n        isCreate={false}\r\n        urlEdit={url}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n","const LOWER_COLOR = 100;\r\nconst UPPER_COLOR = 255;\r\nconst LOWER_OPACITY = 0.3;\r\nconst UPPER_OPACITY = 0.8;\r\n\r\nfunction getRandomFloat(min: number, max: number): number {\r\n  return Math.random() * (max - min) + min;\r\n}\r\n\r\nfunction getRandomInRange(min: number, max: number): number {\r\n  return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\n\r\nexport function colorGenerator(): string {\r\n  const colors: number[] = new Array(3);\r\n  for (let i = 0; i < 3; i++) {\r\n    colors[i] = getRandomInRange(LOWER_COLOR, UPPER_COLOR);\r\n  }\r\n  const a = getRandomFloat(LOWER_OPACITY, UPPER_OPACITY);\r\n\r\n  return `rgba(${colors[0]}, ${colors[1]}, ${colors[2]}, ${a})`;\r\n}\r\n","import { BoardsAction, BoardsActionTypes, BoardsState } from '../types/boards';\r\n\r\nconst initialState: BoardsState = {\r\n  getBoards: { boards: [{ id: 1, title: '' }] },\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\nexport const boardsReducer = (state = initialState, action: BoardsAction): BoardsState => {\r\n  switch (action.type) {\r\n    case BoardsActionTypes.FETCH_BOARDS:\r\n      return { loading: true, error: null, getBoards: { boards: [{ id: 1, title: '' }] } };\r\n    case BoardsActionTypes.FETCH_BOARDS_SUCCESS:\r\n      return { loading: false, error: null, getBoards: action.payload };\r\n    case BoardsActionTypes.FETCH_BOARDS_ERROR:\r\n      return { loading: false, error: action.payload, getBoards: { boards: [{ id: 1, title: '' }] } };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { ListsAction, ListsActionTypes, ListsState } from '../types/lists';\r\n\r\nconst initialState: ListsState = {\r\n  getLists: {\r\n    title: '',\r\n    users: [],\r\n    lists: [],\r\n  },\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\nexport const listsReducer = (state = initialState, action: ListsAction): ListsState => {\r\n  switch (action.type) {\r\n    case ListsActionTypes.FETCH_LISTS:\r\n      return {\r\n        loading: true,\r\n        error: null,\r\n        getLists: {\r\n          title: '',\r\n          users: [],\r\n          lists: [],\r\n        },\r\n      };\r\n    case ListsActionTypes.FETCH_LISTS_SUCCESS:\r\n      return { loading: false, error: null, getLists: action.payload };\r\n    case ListsActionTypes.FETCH_LISTS_ERROR:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n        getLists: {\r\n          title: '',\r\n          users: [],\r\n          lists: [],\r\n        },\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { AddBoardActions, AddBoardActionTypes, AddBoardState } from '../types/addBoard';\r\n\r\nconst initialState: AddBoardState = {\r\n  added: false,\r\n  error: null,\r\n};\r\n\r\nexport const boardReducer = (state = initialState, action: AddBoardActions): AddBoardState => {\r\n  switch (action.type) {\r\n    case AddBoardActionTypes.ADD_BOARD_SUCCESS:\r\n      return { added: true, error: null };\r\n    case AddBoardActionTypes.ADD_BOARD_ERROR:\r\n      return { added: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { EditBoardActions, EditBoardActionTypes, EditBoardState } from '../types/editBoard';\r\n\r\nconst initialState: EditBoardState = {\r\n  edited: true,\r\n  error: null,\r\n};\r\n\r\nexport const boardEditReducer = (state = initialState, action: EditBoardActions): EditBoardState => {\r\n  switch (action.type) {\r\n    case EditBoardActionTypes.EDIT_BOARD_SUCCESS:\r\n      return { edited: true, error: null };\r\n    case EditBoardActionTypes.EDIT_BOARD_ERROR:\r\n      return { edited: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { DeleteBoardActions, DeleteBoardActionTypes, DeleteBoardState } from '../types/deleteBoard';\r\n\r\nconst initialState: DeleteBoardState = {\r\n  deleted: false,\r\n  error: null,\r\n};\r\n\r\nexport const deleteBoardReducer = (state = initialState, action: DeleteBoardActions): DeleteBoardState => {\r\n  switch (action.type) {\r\n    case DeleteBoardActionTypes.DELETE_BOARD_SUCCESS:\r\n      return { deleted: true, error: null };\r\n    case DeleteBoardActionTypes.DELETE_BOARD_ERROR:\r\n      return { deleted: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { AddListActions, AddListActionTypes, AddListState } from '../types/addList';\r\n\r\nconst initialState: AddListState = {\r\n  added: true,\r\n  error: null,\r\n};\r\n\r\nexport const listAddReducer = (state = initialState, action: AddListActions): AddListState => {\r\n  switch (action.type) {\r\n    case AddListActionTypes.ADD_LIST_SUCCESS:\r\n      return { added: true, error: null };\r\n    case AddListActionTypes.ADD_LIST_ERROR:\r\n      return { added: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { DeleteListActions, DeleteListActionTypes, DeleteListState } from '../types/deleteList';\r\n\r\nconst initialState: DeleteListState = {\r\n  deleted: false,\r\n  error: null,\r\n};\r\n\r\nexport const deleteListReducer = (state = initialState, action: DeleteListActions): DeleteListState => {\r\n  switch (action.type) {\r\n    case DeleteListActionTypes.DELETE_LIST_SUCCESS:\r\n      return { deleted: true, error: null };\r\n    case DeleteListActionTypes.DELETE_LIST_ERROR:\r\n      return { deleted: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { AddCardActions, AddCardActionTypes, AddCardState } from '../types/addCard';\r\n\r\nconst initialState: AddCardState = {\r\n  added: true,\r\n  error: null,\r\n};\r\n\r\nexport const cardAddReducer = (state = initialState, action: AddCardActions): AddCardState => {\r\n  switch (action.type) {\r\n    case AddCardActionTypes.ADD_CARD_SUCCESS:\r\n      return { added: true, error: null };\r\n    case AddCardActionTypes.ADD_CARD_ERROR:\r\n      return { added: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { EditListActions, EditListActionTypes, EditListState } from '../types/editList';\r\n\r\nconst initialState: EditListState = {\r\n  edited: true,\r\n  error: null,\r\n};\r\n\r\nexport const listEditReducer = (state = initialState, action: EditListActions): EditListState => {\r\n  switch (action.type) {\r\n    case EditListActionTypes.EDIT_LIST_SUCCESS:\r\n      return { edited: true, error: null };\r\n    case EditListActionTypes.EDIT_LIST_ERROR:\r\n      return { edited: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { DeleteCardActions, DeleteCardActionTypes, DeleteCardState } from '../types/deleteCard';\r\n\r\nconst initialState: DeleteCardState = {\r\n  deleted: false,\r\n  error: null,\r\n};\r\n\r\nexport const deleteCardReducer = (state = initialState, action: DeleteCardActions): DeleteCardState => {\r\n  switch (action.type) {\r\n    case DeleteCardActionTypes.DELETE_CARD_SUCCESS:\r\n      return { deleted: true, error: null };\r\n    case DeleteCardActionTypes.DELETE_CARD_ERROR:\r\n      return { deleted: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { EditCardActions, EditCardActionTypes, EditCardState } from '../types/editCard';\r\n\r\nconst initialState: EditCardState = {\r\n  edited: false,\r\n  error: null,\r\n};\r\n\r\nexport const cardEditReducer = (state = initialState, action: EditCardActions): EditCardState => {\r\n  switch (action.type) {\r\n    case EditCardActionTypes.EDIT_CARD_SUCCESS:\r\n      return { edited: true, error: null };\r\n    case EditCardActionTypes.EDIT_CARD_ERROR:\r\n      return { edited: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport { boardsReducer } from './boardsReducer';\r\nimport { listsReducer } from './listsReducer';\r\nimport { boardReducer } from './boardReducer';\r\nimport { boardEditReducer } from './boardEditReducer';\r\nimport { deleteBoardReducer } from './deleteBoardReducer';\r\nimport { listAddReducer } from './listAddReducer';\r\nimport { deleteListReducer } from './deleteListReducer';\r\nimport { cardAddReducer } from './cardAddReducer';\r\nimport { listEditReducer } from './listEditReducer';\r\nimport { deleteCardReducer } from './deleteCardReducer';\r\nimport { cardEditReducer } from './cardEditReducer';\r\n\r\nexport const rootReducer = combineReducers({\r\n  boards: boardsReducer,\r\n  lists: listsReducer,\r\n  boardAdd: boardReducer,\r\n  boardEdit: boardEditReducer,\r\n  boardDelete: deleteBoardReducer,\r\n  listAdd: listAddReducer,\r\n  listDelete: deleteListReducer,\r\n  addCard: cardAddReducer,\r\n  editList: listEditReducer,\r\n  cardDelete: deleteCardReducer,\r\n  cardEdit: cardEditReducer,\r\n});\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\n","import { applyMiddleware, createStore } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { rootReducer } from './reducers';\r\n\r\n// export const store = createStore(rootReducer, compose(applyMiddleware(thunk), composeWithDevTools()));\r\nexport const store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\r\n","/* eslint-disable no-console */\r\nimport React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Spinner } from 'reactstrap';\r\nimport { colorGenerator } from '../../../../functions/cardColorGenerator';\r\nimport { useActions } from '../../../../hooks/useActions';\r\nimport { useTypeSelector } from '../../../../hooks/useTypeSelector';\r\nimport { store } from '../../../../store';\r\nimport './boards.css';\r\n\r\nconst Boards: React.FC = () => {\r\n  const { getBoards, error, loading } = useTypeSelector((state) => state.boards);\r\n  const { fetchBoards } = useActions();\r\n  useEffect(() => {\r\n    const abortController = new AbortController();\r\n    fetchBoards();\r\n    return (): void => {\r\n      abortController.abort();\r\n    };\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <Spinner color=\"success\" />;\r\n  }\r\n\r\n  if (error) {\r\n    return <h2>{error}</h2>;\r\n  }\r\n  console.log(store.getState().boardAdd.added);\r\n  if (getBoards.boards.length > 0) {\r\n    return (\r\n      <div>\r\n        <div className=\"row boards-row\">\r\n          {getBoards.boards.map((board) => (\r\n            <Link\r\n              to={`/board/${board.id}`}\r\n              key={board.id}\r\n              className=\"card col-md-3 mx-2\"\r\n              style={{ background: `${colorGenerator()}` }}\r\n            >\r\n              {board.title}\r\n            </Link>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Boards</h1>\r\n      <h2>Boards wasn't create</h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Boards;\r\n","import React, { useState } from 'react';\r\nimport BaseModalWrapper from '../Modal/BaseModalWrapper';\r\nimport Boards from './components/boards/Boards';\r\n\r\nconst Main: React.FC = () => {\r\n  const [isModalVisible, setModalVisible] = useState(false);\r\n  const toggleModal = (): void => {\r\n    setModalVisible((wasModalVisible) => !wasModalVisible);\r\n  };\r\n  return (\r\n    <section>\r\n      <div className=\"container my-4\">\r\n        <button className=\"btn btn-outline-primary\" onClick={toggleModal}>\r\n          Add Board\r\n        </button>\r\n      </div>\r\n      <div className=\"container\">\r\n        <h1>Boards</h1>\r\n        <p>This is a training React-project. An analogue of the \"Trello\" service.</p>\r\n        <Boards />\r\n      </div>\r\n      <BaseModalWrapper\r\n        isModalVisible={isModalVisible}\r\n        onBackDropClick={toggleModal}\r\n        startTitle=\"\"\r\n        isCreate\r\n        urlEdit=\"\"\r\n      />\r\n    </section>\r\n  );\r\n};\r\nexport default Main;\r\n","import React from 'react';\r\nimport { Switch, Route, Redirect, BrowserRouter } from 'react-router-dom';\r\nimport './App.css';\r\nimport Board from './pages/Board/Board';\r\nimport Home from './pages/Home/Home';\r\n\r\nconst App: React.FC = () => (\r\n  <BrowserRouter>\r\n    <div className=\"container\">\r\n      <Switch>\r\n        <Route component={Home} path=\"/\" exact />\r\n        <Route component={Board} path=\"/board/:id\" />\r\n        <Redirect exact to=\"/\" />\r\n      </Switch>\r\n    </div>\r\n  </BrowserRouter>\r\n);\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport { Provider } from 'react-redux';\r\nimport App from './App';\r\nimport { store } from './store';\r\n\r\n/* import reportWebVitals from './reportWebVitals'; */\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n/* reportWebVitals(); */\r\n"],"sourceRoot":""}